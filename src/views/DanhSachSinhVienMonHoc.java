/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package views;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStreamReader;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.DanhSachMonHoc;
import models.Diem;
import models.SinhVien;

/**
 *
 * @author Administrator
 */
public class DanhSachSinhVienMonHoc extends javax.swing.JPanel {
    ArrayList<DanhSachMonHoc> dsmh;
    ArrayList<SinhVien> Sinhvienlist;
    ArrayList<SinhVien> Sinhvienlisttg;
    DefaultTableModel tbnModel= new DefaultTableModel();
    /**
     * Creates new form DanhSachSinhVienMonHoc
     */
    public DanhSachSinhVienMonHoc() {
        initComponents();
        setSize(544, 372);
        initTable();
    }
    public void fillTable(){
        tbnModel.setRowCount(0);
        
        for (SinhVien svtg: Sinhvienlisttg) {
            
            tbnModel.addRow(new String[]{svtg.getMaSV(),svtg.getTenSV(),svtg.getGioiTinh(),svtg.getSDT()});
            
        }
        tbnModel.fireTableDataChanged();
    }
     public void fillTable2(){
        tbnModel.setRowCount(0);
        
        for (DanhSachMonHoc ds:dsmh) {
            
            tbnModel.addRow(new String[]{ds.getMaSV(),ds.getMaMon(),ds.getMaLichThi(),ds.getMaSV()});
            
        }
        tbnModel.fireTableDataChanged();
    }
    public void initTable(){
        String[] columns= new String[]{"Mã sinh viên","Tên sinh viên","Giới tính","Số điện thoại"};
        
        tbnModel.setColumnIdentifiers(columns);
        tbnsv.setModel(tbnModel);
        tbnsv.setAutoCreateRowSorter(true);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtmamon = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbnsv = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        jLabel1.setText("Nhập mã môn học");

        tbnsv.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã sinh viên", "Tên sinh viên", "Giới tính", "Số điện thoại"
            }
        ));
        jScrollPane1.setViewportView(tbnsv);

        jButton1.setText("Hiển thị");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 532, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(229, 229, 229)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtmamon)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(59, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtmamon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(36, 36, 36)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dsmh = new ArrayList<>();
        Sinhvienlist = new ArrayList<>();
        Sinhvienlisttg = new ArrayList<>();
        StringBuilder sb =new StringBuilder();
        FileInputStream fis=null;
        InputStreamReader reader=null;
        BufferedReader bufferedreader= null;
        try {
            fis=new FileInputStream("file//danhSachMonHoc.txt");
            reader=new InputStreamReader(fis, StandardCharsets.UTF_8);
            bufferedreader=new BufferedReader(reader);
            String line=null;
            while(null!=(line=bufferedreader.readLine())){
                if(line.isEmpty()){
                continue;
                
            }
                DanhSachMonHoc dsmha=new DanhSachMonHoc();
                dsmha.parse(line);
                dsmh.add(dsmha);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(quan_ly_lop_hoc_phan.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(quan_ly_lop_hoc_phan.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
            if(fis!=null){
                try {
                    fis.close();
                } catch (IOException ex) {
                    Logger.getLogger(quan_ly_lop_hoc_phan.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if(reader!=null){
                try {
                    reader.close();
                } catch (IOException ex) {
                    Logger.getLogger(quan_ly_lop_hoc_phan.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if(bufferedreader!=null){
                try {
                    bufferedreader.close();
                } catch (IOException ex) {
                    Logger.getLogger(quan_ly_lop_hoc_phan.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        try {
            fis=new FileInputStream("file//sinhVien.txt");
            reader=new InputStreamReader(fis, StandardCharsets.UTF_8);
            bufferedreader=new BufferedReader(reader);
            String line=null;
            while(null!=(line=bufferedreader.readLine())){
                if(line.isEmpty()){
                continue;
                
            }
                SinhVien sv=new SinhVien();
                sv.parse(line);
                Sinhvienlist.add(sv);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(quan_ly_lop_hoc_phan.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(quan_ly_lop_hoc_phan.class.getName()).log(Level.SEVERE, null, ex);
        }finally{
            if(fis!=null){
                try {
                    fis.close();
                } catch (IOException ex) {
                    Logger.getLogger(quan_ly_lop_hoc_phan.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if(reader!=null){
                try {
                    reader.close();
                } catch (IOException ex) {
                    Logger.getLogger(quan_ly_lop_hoc_phan.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if(bufferedreader!=null){
                try {
                    bufferedreader.close();
                } catch (IOException ex) {
                    Logger.getLogger(quan_ly_lop_hoc_phan.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        int error=0;
        for (DanhSachMonHoc danhSachMonHoc : dsmh) {
            if(danhSachMonHoc.getMaMon().equals(txtmamon.getText())){
                
                for(SinhVien sv: Sinhvienlist){
                    if(sv.getMaSV().equals(danhSachMonHoc.getMaSV())){
                        Sinhvienlisttg.add(sv);
                        error=1;
                    }
                }
            
            }
                
        }
        if(error==0){
            JOptionPane.showMessageDialog(this, "Môn không có sinh viên học", "ERROT", JOptionPane.ERROR_MESSAGE);
            return ;
        }
//        SinhVien sv=new SinhVien("SV08","Cao Thị Sen","27/01/2000","Nữ","Bắc Ninh","Caothisen08@","0966108364","Bóng bàn, Bóng chuyền, Cầu lông");
//        Sinhvienlisttg.add(sv);
        fillTable();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbnsv;
    private javax.swing.JTextField txtmamon;
    // End of variables declaration//GEN-END:variables
}
